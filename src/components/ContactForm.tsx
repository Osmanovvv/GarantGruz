'use client'

import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
	Select,
	SelectContent,
	SelectItem,
	SelectTrigger,
	SelectValue,
} from "@/components/ui/select";
import { Phone, Mail, Send, Calculator, Clock } from "lucide-react";
import { useState, useEffect } from "react";

const ContactForm = () => {
	const [formData, setFormData] = useState({
		name: "",
		phone: "",
		email: "",
		from: "–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å",
		to: "",
		cargo: "",
		weight: "",
		dimensions: "",
		transportType: "", // "pyramid", "flatbed", "manipulator"
		loadingTime: "",
		unloadingTime: "",
		message: "",
	});

	const [calculatedPrice, setCalculatedPrice] = useState<number | null>(null);

	// –ë–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
	const basePrices = {
		"–ü–æ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—é": {
			pyramid: 1500,
			flatbed: 1500,
			manipulator: 4000,
			perKm: 0,
			time: "30-60 –º–∏–Ω",
		},
		–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å: {
			pyramid: 6000,
			flatbed: 6000,
			manipulator: 12000,
			perKm: 79,
			time: "1-1.5 —á–∞—Å–∞",
		},
		–Ø–ª—Ç–∞: {
			pyramid: 7000,
			flatbed: 7000,
			manipulator: 15000,
			perKm: 90,
			time: "1.5-2 —á–∞—Å–∞",
		},
		–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π: {
			pyramid: 3500,
			flatbed: 3500,
			manipulator: 7000,
			perKm: 31,
			time: "35-45 –º–∏–Ω",
		},
		–ê–ª—É—à—Ç–∞: {
			pyramid: 5000,
			flatbed: 5000,
			manipulator: 10000,
			perKm: 54,
			time: "50-70 –º–∏–Ω",
		},
		–ö–µ—Ä—á—å: {
			pyramid: 11000,
			flatbed: 11000,
			manipulator: 25000,
			perKm: 210,
			time: "2.5-3 —á–∞—Å–∞",
		},
		–§–µ–æ–¥–æ—Å–∏—è: {
			pyramid: 8000,
			flatbed: 8000,
			manipulator: 7000,
			perKm: 124,
			time: "2-2.5 —á–∞—Å–∞",
		},
		–î–∂–∞–Ω–∫–æ–π: {
			pyramid: 6000,
			flatbed: 6000,
			manipulator: 12000,
			perKm: 94,
			time: "1-1.5 —á–∞—Å–∞",
		},
		–°—É–¥–∞–∫: {
			pyramid: 7000,
			flatbed: 7000,
			manipulator: 15000,
			perKm: 109,
			time: "2-2.5 —á–∞—Å–∞",
		},
		–ï–≤–ø–∞—Ç–æ—Ä–∏—è: {
			pyramid: 5000,
			flatbed: 5000,
			manipulator: 10000,
			perKm: 75,
			time: "1-1.5 —á–∞—Å–∞",
		},
		–°–∞–∫–∏: {
			pyramid: 4000,
			flatbed: 4000,
			manipulator: 8000,
			perKm: 45,
			time: "40-55 –º–∏–Ω",
		},
		–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–æ–µ: {
			pyramid: 9000,
			flatbed: 9000,
			manipulator: 18000,
			perKm: 142,
			time: "1.5-2 —á–∞—Å–∞",
		},
		–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å–∫: {
			pyramid: 9000,
			flatbed: 9000,
			manipulator: 18000,
			perKm: 124,
			time: "1.5-2 —á–∞—Å–∞",
		},
		–ì–µ–Ω–∏—á–µ—Å–∫: {
			pyramid: 11000,
			flatbed: 11000,
			manipulator: 25000,
			perKm: 172,
			time: "2.5-3 —á–∞—Å–∞",
		},
	};

	// –¢–∞—Ä–∏—Ñ—ã –∑–∞ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏/—Ä–∞–∑–≥—Ä—É–∑–∫–∏ —Å–≤—ã—à–µ 30 –º–∏–Ω—É—Ç
	const timePricing = {
		pyramid: 600,    // ‚ÇΩ/—á–∞—Å –¥–ª—è –º–∞—à–∏–Ω —Å –ø–∏—Ä–∞–º–∏–¥–æ–π
		flatbed: 1000,   // ‚ÇΩ/—á–∞—Å –¥–ª—è –±–æ—Ä—Ç–æ–≤—ã—Ö –º–∞—à–∏–Ω
		manipulator: 2000 // ‚ÇΩ/—á–∞—Å –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–≤
	};

	const calculateTimeCharge = (timeRange: string, transportType: string) => {
		if (!timeRange || timeRange === "–¥–æ 30 –º–∏–Ω") return 0;

		const hourlyRate = timePricing[transportType as keyof typeof timePricing] || 0;

		switch (timeRange) {
			case "30-60 –º–∏–Ω":
				return hourlyRate; // 1 —á–∞—Å –¥–æ–ø–ª–∞—Ç—ã
			case "1-2 —á–∞—Å–∞":
				return hourlyRate * 2; // 2 —á–∞—Å–∞ –¥–æ–ø–ª–∞—Ç—ã
			case "–±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤":
				return hourlyRate * 3; // 3 —á–∞—Å–∞ –¥–æ–ø–ª–∞—Ç—ã (–ø—Ä–∏–º–µ—Ä–Ω–æ)
			default:
				return 0;
		}
	};

	const calculatePrice = () => {
		if (!formData.transportType || !formData.weight || !formData.to) return;

		let price = 0;
		const weight = parseFloat(formData.weight);
		const destination = basePrices[formData.to as keyof typeof basePrices];

		if (destination) {
			// –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
			if (formData.transportType === "pyramid") {
				price = destination.pyramid;
			} else if (formData.transportType === "flatbed") {
				price = destination.flatbed;
			} else if (formData.transportType === "manipulator") {
				price = destination.manipulator;
			}

			// –î–æ–ø–ª–∞—Ç–∞ –∑–∞ –≤—Ä–µ–º—è –ø–æ–≥—Ä—É–∑–∫–∏
			const loadingCharge = calculateTimeCharge(formData.loadingTime, formData.transportType);
			price += loadingCharge;

			// –î–æ–ø–ª–∞—Ç–∞ –∑–∞ –≤—Ä–µ–º—è —Ä–∞–∑–≥—Ä—É–∑–∫–∏
			const unloadingCharge = calculateTimeCharge(formData.unloadingTime, formData.transportType);
			price += unloadingCharge;
		}

		// –°–∫–∏–¥–∫–∞ 10%
		price = price * 0.9;

		setCalculatedPrice(Math.round(price));
	};

	useEffect(() => {
		calculatePrice();
	}, [formData.transportType, formData.to, formData.weight, formData.loadingTime, formData.unloadingTime]);

	const handleSubmit = async (e: React.FormEvent) => {
		e.preventDefault();

		// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
		const getTransportTypeName = (type: string) => {
			switch (type) {
				case "pyramid":
					return "–ú–ê–®–ò–ù–ê –° –ü–ò–†–ê–ú–ò–î–û–ô";
				case "flatbed":
					return "–ë–û–†–¢–û–í–ê–Ø –ú–ê–®–ò–ù–ê";
				case "manipulator":
					return "–ú–ê–ù–ò–ü–£–õ–Ø–¢–û–†";
				default:
					return "–Ω–µ –≤—ã–±—Ä–∞–Ω";
			}
		};

		const telegramMessage = `
üöõ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ì–†–£–ó–û–ü–ï–†–ï–í–û–ó–ö–£

üë§ –ö–ª–∏–µ–Ω—Ç: ${formData.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üìß Email: ${formData.email}

üöõ –¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: ${getTransportTypeName(formData.transportType)}
üìç –ú–∞—Ä—à—Ä—É—Ç: ${formData.from} ‚Üí ${formData.to || "–Ω–µ —É–∫–∞–∑–∞–Ω"}
üì¶ –ì—Ä—É–∑: ${formData.cargo}
‚öñÔ∏è –í–µ—Å: ${formData.weight} –∫–≥
üìè –ì–∞–±–∞—Ä–∏—Ç—ã: ${formData.dimensions || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}
‚è∞ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${formData.loadingTime || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–∑–≥—Ä—É–∑–∫–∏: ${formData.unloadingTime || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}

üí∞ –†–∞—Å—á–µ—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${calculatedPrice ? `${calculatedPrice} ‚ÇΩ` : "–Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞"}

üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.message || "–Ω–µ —É–∫–∞–∑–∞–Ω"}

#–∑–∞—è–≤–∫–∞ #–≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∞ #GARANT
    `.trim();

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram Bot API)
		const telegramBotToken = process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN;
		const telegramChatId = process.env.NEXT_PUBLIC_TELEGRAM_CHAT_ID;



		// –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º Telegram Web
		alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç.");

		// –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram —Å –≥–æ—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
		const telegramUrl = `https://t.me/share/url?url=&text=${encodeURIComponent(telegramMessage)}`;
		// window.open(telegramUrl, "_blank");

		// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API:
		// fetch(`https://api.telegram.org/bot${telegramBotToken}/sendMessage`, {
		// 	method: 'POST',
		// 	headers: { 'Content-Type': 'application/json' },
		// 	body: JSON.stringify({
		// 		chat_id: telegramChatId,
		// 		text: telegramMessage,
		// 		parse_mode: 'HTML'
		// 	})
		// });
		await fetch("/api/sendMessage", {
			method: "POST",
			headers: { "Content-Type": "application/json" },
			body: JSON.stringify({ message: telegramMessage }),
		});
	};

	const handleChange = (
		e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,
	) => {
		const { name, value, type } = e.target;
		setFormData({
			...formData,
			[name]:
				type === "checkbox"
					? (e.target as HTMLInputElement).checked
					: value || "",
		});
	};

	const handleSelectChange = (field: string, value: string) => {
		setFormData({
			...formData,
			[field]: value || "",
		});
	};

	return (
		<section className="py-12 sm:py-16 lg:py-20 bg-white">
			<div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
				<div className="text-center mb-8 sm:mb-12">
					<h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-garant-navy mb-4">
						–ó–∞–∫–∞–∑–∞—Ç—å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫—É —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏
					</h2>
					<p className="text-lg text-gray-600">
						–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –æ–Ω–ª–∞–π–Ω –∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É
					</p>
				</div>

				<div className="grid lg:grid-cols-3 gap-8 lg:gap-12">
					{/* Contact Info */}
					<div className="space-y-6">
						<Card className="border-garant-gold">
							<CardHeader>
								<CardTitle className="text-garant-navy">
									–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–≤—è–∑–∏
								</CardTitle>
							</CardHeader>
							<CardContent className="space-y-4">
								<div className="flex items-center gap-3">
									<Phone className="h-5 w-5 text-garant-gold" />
									<div>
										<p className="font-semibold text-garant-navy">
											–î–∏—Å–ø–µ—Ç—á–µ—Ä
										</p>
										<a
											href="tel:+79788631197"
											className="text-gray-600 hover:text-garant-gold transition-colors"
										>
											+7 (978) 863-11-97
										</a>
									</div>
								</div>

								<div className="flex items-center gap-3">
									<Mail className="h-5 w-5 text-garant-gold" />
									<div>
										<p className="font-semibold text-garant-navy">
											Email –¥–ª—è –∑–∞—è–≤–æ–∫
										</p>
										<a
											href="mailto:ilyas-crimea@mail.ru"
											className="text-gray-600 hover:text-garant-gold transition-colors"
										>
											ilyas-crimea@mail.ru
										</a>
									</div>
								</div>
							</CardContent>
						</Card>

						<div className="bg-garant-navy text-white p-6 rounded-lg">
							<h3 className="text-xl font-bold mb-4 text-garant-gold">
								–ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
							</h3>
							<ul className="space-y-2 text-sm">
								<li>üöõ –ú–∞—à–∏–Ω—ã —Å –ø–∏—Ä–∞–º–∏–¥–æ–π (–¥–æ 5 —Ç–æ–Ω–Ω)</li>
								<li>üì¶ –ë–æ—Ä—Ç–æ–≤—ã–µ –º–∞—à–∏–Ω—ã (–¥–æ 5 —Ç–æ–Ω–Ω)</li>
								<li>üèóÔ∏è –ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä—ã (–¥–æ 5 —Ç–æ–Ω–Ω)</li>
								<li>‚úì –û–ø—ã—Ç –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫ –±–æ–ª–µ–µ 10 –ª–µ—Ç</li>
								<li>‚úì –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≥—Ä—É–∑–æ–≤</li>
								<li>‚úì –°–∫–∏–¥–∫–∞ 10% –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ–Ω–ª–∞–π–Ω</li>
								<li>‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–∞—á–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</li>
							</ul>
						</div>

						<Card className="border-garant-gold bg-orange-50">
							<CardHeader>
								<CardTitle className="text-garant-navy flex items-center gap-2">
									<Clock className="h-5 w-5 text-garant-gold" />
									–¢–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏/—Ä–∞–∑–≥—Ä—É–∑–∫–∏
								</CardTitle>
							</CardHeader>
							<CardContent className="space-y-4">
								<div className="space-y-3">
									<div className="border-l-4 border-garant-gold pl-3">
										<p className="font-semibold text-garant-navy">
											üöõ –ú–∞—à–∏–Ω—ã —Å –ø–∏—Ä–∞–º–∏–¥–æ–π:
										</p>
										<p className="text-sm text-gray-600">
											–ü–µ—Ä–≤—ã–µ 30 –º–∏–Ω -{" "}
											<span className="font-bold text-green-600">
												–ë–ï–°–ü–õ–ê–¢–ù–û
											</span>
										</p>
										<p className="text-sm text-gray-600">
											–î–∞–ª–µ–µ: <span className="font-bold">600-1000‚ÇΩ/—á–∞—Å</span>
										</p>
									</div>

									<div className="border-l-4 border-blue-500 pl-3">
										<p className="font-semibold text-garant-navy">
											üì¶ –ë–æ—Ä—Ç–æ–≤—ã–µ –º–∞—à–∏–Ω—ã:
										</p>
										<p className="text-sm text-gray-600">
											–ü–µ—Ä–≤—ã–µ 30 –º–∏–Ω -{" "}
											<span className="font-bold text-green-600">
												–ë–ï–°–ü–õ–ê–¢–ù–û
											</span>
										</p>
										<p className="text-sm text-gray-600">
											–î–∞–ª–µ–µ: <span className="font-bold">600-1000‚ÇΩ/—á–∞—Å</span>
										</p>
									</div>

									<div className="border-l-4 border-green-500 pl-3">
										<p className="font-semibold text-garant-navy">
											üèóÔ∏è –ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä—ã:
										</p>
										<p className="text-sm text-gray-600">
											–ü–µ—Ä–≤—ã–µ 30 –º–∏–Ω -{" "}
											<span className="font-bold text-green-600">
												–ë–ï–°–ü–õ–ê–¢–ù–û
											</span>
										</p>
										<p className="text-sm text-gray-600">
											–î–∞–ª–µ–µ: <span className="font-bold">2500‚ÇΩ/—á–∞—Å</span>
										</p>
									</div>
								</div>

								<div className="bg-amber-100 p-3 rounded-lg">
									<p className="text-xs text-amber-800 font-medium">
										‚è∞ –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞/—Ä–∞–∑–≥—Ä—É–∑–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ 30 –º–∏–Ω—É—Ç, –¥–æ–ø–ª–∞—Ç–∞
										–≤–∑–∏–º–∞–µ—Ç—Å—è –∑–∞ –∫–∞–∂–¥—ã–π –ø–æ–ª–Ω—ã–π —á–∞—Å
									</p>
								</div>
							</CardContent>
						</Card>


					</div>

					{/* Contact Form */}
					<div className="lg:col-span-2">
						<Card>
							<CardContent className="p-6">
								<form onSubmit={handleSubmit} className="space-y-4">
									<div className="grid sm:grid-cols-2 gap-4">
										<div>
											<Label htmlFor="name">–í–∞—à–µ –∏–º—è *</Label>
											<Input
												id="name"
												name="name"
												value={formData.name}
												onChange={handleChange}
												required
												placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
											/>
										</div>

										<div>
											<Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
											<Input
												id="phone"
												name="phone"
												type="tel"
												value={formData.phone}
												onChange={handleChange}
												required
												placeholder="+7 (___) ___-__-__"
											/>
										</div>
									</div>

									<div>
										<Label htmlFor="email">Email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</Label>
										<Input
											id="email"
											name="email"
											type="email"
											value={formData.email}
											onChange={handleChange}
											placeholder="your@email.com"
										/>
									</div>

									<div>
										<Label htmlFor="transportType">–¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ *</Label>
										<Select
											value={formData.transportType}
											onValueChange={(value) =>
												handleSelectChange("transportType", value)
											}
											required
										>
											<SelectTrigger id="transportType">
												<SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞" />
											</SelectTrigger>
											<SelectContent>
												<SelectItem value="pyramid">
													üöõ –ú–∞—à–∏–Ω–∞ —Å –ø–∏—Ä–∞–º–∏–¥–æ–π - –¥–ª—è –æ–±—ä–µ–º–Ω—ã—Ö –≥—Ä—É–∑–æ–≤
												</SelectItem>
												<SelectItem value="flatbed">
													üì¶ –ë–æ—Ä—Ç–æ–≤–∞—è –º–∞—à–∏–Ω–∞ - –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –≥—Ä—É–∑–æ–≤
												</SelectItem>
												<SelectItem value="manipulator">
													üèóÔ∏è –ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä - –¥–ª—è –ø–æ–¥—ä–µ–º–∞ –≥—Ä—É–∑–æ–≤
												</SelectItem>
											</SelectContent>
										</Select>
									</div>

									<div className="grid sm:grid-cols-2 gap-4">
										<div>
											<Label htmlFor="from">–û—Ç–∫—É–¥–∞ –∑–∞–±—Ä–∞—Ç—å –≥—Ä—É–∑</Label>
											<Select
												value={formData.from}
												onValueChange={(value) =>
													handleSelectChange("from", value)
												}
												defaultValue="–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å"
											>
												<SelectTrigger id="from">
													<SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" />
												</SelectTrigger>
												<SelectContent>
													<SelectItem value="–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å">
														–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å
													</SelectItem>
													<SelectItem value="–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å">
														–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å
													</SelectItem>
													<SelectItem value="–Ø–ª—Ç–∞">–Ø–ª—Ç–∞</SelectItem>
													<SelectItem value="–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π">–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π</SelectItem>
													<SelectItem value="–ê–ª—É—à—Ç–∞">–ê–ª—É—à—Ç–∞</SelectItem>
													<SelectItem value="–ö–µ—Ä—á—å">–ö–µ—Ä—á—å</SelectItem>
													<SelectItem value="–§–µ–æ–¥–æ—Å–∏—è">–§–µ–æ–¥–æ—Å–∏—è</SelectItem>
													<SelectItem value="–î–∂–∞–Ω–∫–æ–π">–î–∂–∞–Ω–∫–æ–π</SelectItem>
													<SelectItem value="–°—É–¥–∞–∫">–°—É–¥–∞–∫</SelectItem>
													<SelectItem value="–ï–≤–ø–∞—Ç–æ—Ä–∏—è">–ï–≤–ø–∞—Ç–æ—Ä–∏—è</SelectItem>
													<SelectItem value="–°–∞–∫–∏">–°–∞–∫–∏</SelectItem>
													<SelectItem value="–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–æ–µ">–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–æ–µ</SelectItem>
													<SelectItem value="–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å–∫">–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å–∫</SelectItem>
													<SelectItem value="–ì–µ–Ω–∏—á–µ—Å–∫">–ì–µ–Ω–∏—á–µ—Å–∫</SelectItem>
													<SelectItem value="–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥">–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥</SelectItem>
												</SelectContent>
											</Select>
										</div>

										<div>
											<Label htmlFor="to">–ö—É–¥–∞ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≥—Ä—É–∑ *</Label>
											<Select
												value={formData.to}
												onValueChange={(value) =>
													handleSelectChange("to", value)
												}
												required
											>
												<SelectTrigger id="to">
													<SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" />
												</SelectTrigger>
												<SelectContent>
													<SelectItem value="–ü–æ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—é">
														–ü–æ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—é
													</SelectItem>
													<SelectItem value="–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å">
														–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å (79 –∫–º)
													</SelectItem>
													<SelectItem value="–Ø–ª—Ç–∞">
														–Ø–ª—Ç–∞ (90 –∫–º)
													</SelectItem>
													<SelectItem value="–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π">
														–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π (31 –∫–º)
													</SelectItem>
													<SelectItem value="–ê–ª—É—à—Ç–∞">
														–ê–ª—É—à—Ç–∞ (54 –∫–º)
													</SelectItem>
													<SelectItem value="–ö–µ—Ä—á—å">
														–ö–µ—Ä—á—å (210 –∫–º)
													</SelectItem>
													<SelectItem value="–§–µ–æ–¥–æ—Å–∏—è">
														–§–µ–æ–¥–æ—Å–∏—è (124 –∫–º)
													</SelectItem>
													<SelectItem value="–î–∂–∞–Ω–∫–æ–π">
														–î–∂–∞–Ω–∫–æ–π (94 –∫–º)
													</SelectItem>
													<SelectItem value="–°—É–¥–∞–∫">
														–°—É–¥–∞–∫ (109 –∫–º)
													</SelectItem>
													<SelectItem value="–ï–≤–ø–∞—Ç–æ—Ä–∏—è">
														–ï–≤–ø–∞—Ç–æ—Ä–∏—è (75 –∫–º)
													</SelectItem>
													<SelectItem value="–°–∞–∫–∏">
														–°–∞–∫–∏ (45 –∫–º)
													</SelectItem>
													<SelectItem value="–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–æ–µ">
														–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–æ–µ (142 –∫–º)
													</SelectItem>
													<SelectItem value="–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å–∫">
														–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å–∫ (124 –∫–º)
													</SelectItem>
													<SelectItem value="–ì–µ–Ω–∏—á–µ—Å–∫">
														–ì–µ–Ω–∏—á–µ—Å–∫ (172 –∫–º)
													</SelectItem>
													<SelectItem value="–î—Ä—É–≥–æ–π">
														–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥
													</SelectItem>
												</SelectContent>
											</Select>
										</div>
									</div>

									<div className="grid sm:grid-cols-3 gap-4">
										<div>
											<Label htmlFor="cargo">–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞ *</Label>
											<Input
												id="cargo"
												name="cargo"
												value={formData.cargo}
												onChange={handleChange}
												required
												placeholder="–ß—Ç–æ –ø–µ—Ä–µ–≤–æ–∑–∏–º?"
											/>
										</div>

										<div>
											<Label htmlFor="weight">–í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥) *</Label>
											<Input
												id="weight"
												name="weight"
												type="number"
												value={formData.weight}
												onChange={handleChange}
												required
												placeholder="100"
											/>
										</div>

										<div>
											<Label htmlFor="dimensions">–ì–∞–±–∞—Ä–∏—Ç—ã (–¥√ó—à√ó–≤)</Label>
											<Input
												id="dimensions"
												name="dimensions"
												value={formData.dimensions}
												onChange={handleChange}
												placeholder="2–º√ó1–º√ó1–º"
											/>
										</div>
									</div>

									<div className="grid sm:grid-cols-2 gap-4">
										<div>
											<Label htmlFor="loadingTime">–í—Ä–µ–º—è –Ω–∞ –ø–æ–≥—Ä—É–∑–∫—É</Label>
											<Select
												value={formData.loadingTime}
												onValueChange={(value) =>
													handleSelectChange("loadingTime", value)
												}
											>
												<SelectTrigger id='loadingTime'>
													<SelectValue placeholder="–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–π–º–µ—Ç –ø–æ–≥—Ä—É–∑–∫–∞?" />
												</SelectTrigger>
												<SelectContent>
													<SelectItem value="–¥–æ 30 –º–∏–Ω">
														–î–æ 30 –º–∏–Ω—É—Ç
													</SelectItem>
													<SelectItem value="30-60 –º–∏–Ω">
														30-60 –º–∏–Ω—É—Ç
													</SelectItem>
													<SelectItem value="1-2 —á–∞—Å–∞">
														1-2 —á–∞—Å–∞
													</SelectItem>
													<SelectItem value="–±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤">
														–ë–æ–ª–µ–µ 2 —á–∞—Å–æ–≤
													</SelectItem>
												</SelectContent>
											</Select>
										</div>

										<div>
											<Label htmlFor="unloadingTime">–í—Ä–µ–º—è –Ω–∞ —Ä–∞–∑–≥—Ä—É–∑–∫—É</Label>
											<Select
												value={formData.unloadingTime}
												onValueChange={(value) =>
													handleSelectChange("unloadingTime", value)
												}
											>
												<SelectTrigger id='unloadingTime'>
													<SelectValue placeholder="–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–π–º–µ—Ç —Ä–∞–∑–≥—Ä—É–∑–∫–∞?" />
												</SelectTrigger>
												<SelectContent>
													<SelectItem value="–¥–æ 30 –º–∏–Ω">
														–î–æ 30 –º–∏–Ω—É—Ç
													</SelectItem>
													<SelectItem value="30-60 –º–∏–Ω">
														30-60 –º–∏–Ω—É—Ç
													</SelectItem>
													<SelectItem value="1-2 —á–∞—Å–∞">
														1-2 —á–∞—Å–∞
													</SelectItem>
													<SelectItem value="–±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤">
														–ë–æ–ª–µ–µ 2 —á–∞—Å–æ–≤
													</SelectItem>
												</SelectContent>
											</Select>
										</div>
									</div>

									<div>
										<Label htmlFor="message">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Label>
										<Textarea
											id="message"
											name="message"
											value={formData.message}
											onChange={handleChange}
											placeholder="–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≥—Ä—É–∑–∞, –∞–¥—Ä–µ—Å–∞, –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏..."
											rows={3}
										/>
									</div>

									<Button
										type="submit"
										className="w-full bg-garant-gold hover:bg-garant-gold-light text-garant-navy font-semibold text-lg py-6"
									>
										<Send className="h-5 w-5 mr-2" />
										–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ Telegram
									</Button>

									<p className="text-xs text-gray-500 text-center">
										–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö
										–¥–∞–Ω–Ω—ã—Ö
									</p>
								</form>
							</CardContent>
						</Card>

						{/* Price Calculator Display */}
						{calculatedPrice && (
							<Card className="border-garant-gold bg-garant-gold/5 mt-5">
								<CardContent className="p-6">
									<div className="flex items-center gap-2 mb-2">
										<Calculator className="h-5 w-5 text-garant-gold" />
										<h3 className="text-lg font-bold text-garant-navy">
											–†–∞—Å—á–µ—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
										</h3>
									</div>
									<div className="text-3xl font-bold text-garant-gold mb-2">
										{calculatedPrice} ‚ÇΩ
									</div>
									<p className="text-sm text-gray-600">
										* –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
										–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –≥—Ä—É–∑–∞
									</p>
								</CardContent>
							</Card>
						)}
					</div>
				</div>
			</div>
		</section>
	);
};

export default ContactForm;
